

# This file was *autogenerated* from the file chall.sage
from sage.all_cmdline import *   # import sage library

_sage_const_80 = Integer(80); _sage_const_256 = Integer(256); _sage_const_2 = Integer(2); _sage_const_8 = Integer(8)#!/usr/bin/env python3

from random import *
from Crypto.Util.number import *
from flag import flag

def encrypt(msg, KEY):
	print(f"flag eh {msg}")
	m = bytes_to_long(msg)
	print("m calculado")
	print(f"key = {KEY}, m = {m}")
	c = KEY ** m
	print("c calculado")
	return c

n = _sage_const_80 
TMP = [getrandbits(_sage_const_256 ) * _ ** _sage_const_2  for _ in range(n)]
print("tmp calculado")
KEY = sum([getrandbits(_sage_const_256  >> _) for _ in range(_sage_const_8 )]) 
print("key calculada")

enc = encrypt(flag, KEY)

print("encriptado!")

print(f'TMP = {TMP}')
print(f'KEY = {KEY}')
print(f'enc = {enc}')

